buildscript {

    repositories {
        google()
        mavenCentral()
        jcenter()
        maven { url "https://jitpack.io" }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:7.2.2'
        classpath 'com.google.gms:google-services:4.3.15'
        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.9.6'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.8.22"

    }
}

apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'kotlin-android'



android {
    // Required if using classes in android.test.runner
    //useLibrary 'android.test.runner'

    // Required if using classes in android.test.base
    //useLibrary 'android.test.base'

    // Required if using classes in android.test.mock
    //useLibrary 'android.test.mock'
    namespace 'com.sikderithub.keyboard'
    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 33
        compileSdk 33
        versionCode 3
        versionName "1.3"

        applicationId 'com.sikderithub.keyboard'
        testApplicationId 'com.android.inputmethod.latin.tests'
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = false

        signingConfig signingConfigs.debug
    }

    signingConfigs {
        debug {
            storeFile file("java/shared.keystore")
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
        }
        release {
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard.flags'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    flavorDimensions "default"

    sourceSets {
        main {
            res.srcDirs = ['java/res']
            java.srcDirs = ['common/src', 'java/src', 'java\\java', 'src\\test\\java']
            //jniLibs.srcDirs = ['java/jni']
            manifest.srcFile 'java/AndroidManifest.xml'
        }

        androidTest {
            res.srcDirs = ['tests/res']
            java.srcDirs = ['tests/src']
            manifest.srcFile "tests/AndroidManifest.xml"
        }
    }

    lintOptions {
        checkReleaseBuilds false
    }

    aaptOptions {
        noCompress 'dict'
    }

    externalNativeBuild {
//        ndkBuild {
//            path 'native/jni/Android.mk'
//        }
        cmake {
            // Provides a relative path to your CMake build script.
            path "native/jni/CMakeLists.txt"
        }
    }


    buildTypes.each {
        it.buildConfigField 'String', 'BASE_URL', BASE_URL
        it.buildConfigField 'String', 'USER_NAME', USER_NAME
        it.buildConfigField 'String', 'USER_PASSWORD', USER_PASSWORD
    }

}

repositories {
    google()
    maven { url "../../../prebuilts/fullsdk-darwin/extras/android/m2repository" }
    maven { url "../../../prebuilts/fullsdk-linux/extras/android/m2repository" }
    mavenCentral()
    jcenter()
    maven { url "https://jitpack.io" }
}

dependencies {
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.code.findbugs:jsr305:3.0.2'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.preference:preference:1.2.0'
    //implementation 'org.testng:testng:6.9.6'


    implementation 'junit:junit:4.13.2'
//    androidTestImplementation "org.mockito:mockito-core:1.9.5"
//    androidTestImplementation 'com.google.dexmaker:dexmaker:1.2'
//    androidTestImplementation 'com.google.dexmaker:dexmaker-mockito:1.2'
//    androidTestImplementation 'com.android.support.test:runner:1.0.2'
//
//    androidTestImplementation 'androidx.test:runner:1.4.0'

    // Import the BoM for the Firebase platform
    implementation platform('com.google.firebase:firebase-bom:32.1.0')

    // Add the dependencies for the Crashlytics and Analytics libraries
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation 'com.google.firebase:firebase-crashlytics'
    implementation 'com.google.firebase:firebase-analytics'

    implementation 'com.airbnb.android:lottie:6.0.0'

    //for network api calling and convert to json format
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'


    implementation(platform("com.squareup.okhttp3:okhttp-bom:4.11.0"))

    // define any required OkHttp artifacts without version
    implementation("com.squareup.okhttp3:okhttp")
    implementation("com.squareup.okhttp3:logging-interceptor")

    // Room components
    def room_version = "2.5.1"
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"

    implementation "androidx.recyclerview:recyclerview-selection:1.1.0"
    implementation 'com.google.android.gms:play-services-ads:22.1.0'
    implementation 'com.google.firebase:firebase-messaging:23.1.2'

    implementation 'com.github.angads25:toggle:1.1.0'
    implementation 'androidx.palette:palette-ktx:1.0.0'
    implementation 'com.github.yalantis:ucrop:2.2.8'

    implementation 'com.github.kamaravichow:admob-templates-android:1.1.3'


}
